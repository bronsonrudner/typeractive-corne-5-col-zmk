/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "keys_en_gb.h"  // https://github.com/joelspadin/zmk-locale-generator/releases/tag/v1.5.0


#define AS(keycode) &as LS(keycode) keycode

/ {
    chosen {
        zmk,physical-layout = &foostan_corne_5col_layout;
    };

    behaviors {
        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
        double_shift: double_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp LSHFT>, <&macro_tap &kp LSHFT>;
        };
    };
    
    keymap {
        compatible = "zmk,keymap";

        default_layer {
// -------------------------------     -------------------------------
// |  '  |  ,  |  .  |  P  |  Y  |     |  F  |  G  |  C  |  R  |  L  |
// |  A  |  O  |  E  |  U  |  I  |     |  D  |  H  |  T  |  N  |  S  | 
// |  /  |  Q  |  J  |  K  |  X  |     |  B  |  M  |  W  |  V  |  Z  |
//             |     |     | SPC |     | SPC |     |     |
// 
//      Home-row mods: CTRL ALT WIN SHIFT
//
            bindings = <
                &kp SQT &kp COMMA &kp DOT &kp P &kp Y                           &kp F &kp G &kp C &kp R &kp L
                &mt LCTRL A &mt LALT O &mt LWIN E &mt LSHIFT U &kp I            &kp D &mt LSHIFT H &mt LWIN T &mt LALT N &mt LCTRL S
                &kp FSLH &kp Q &kp J &kp K &kp X                                &kp B &kp M &kp W &kp V &kp Z
                &none &mo 5 &lt 2 SPACE                                         &lt 1 SPACE &mo 3 &none
            >;
        };

        symbols_1 {
// -----------------------------------------------------------------------------------------
// |  !  |  "  |  #  |  $  |  %  |     |  ^  |  &  |  *  |  [  |  ]  |
// |  ;  |  :  |  +  |  =  |  1  |     |  0  |  _  |  -  |  (  |  )  |
// |  \  |     |  {  |  }  |  €  |     |  £  |  `  |  ~  |  |  |     |
//             | GUI |     | SPC |     | ENT | ESC | TAB |
//
            bindings = <
                &kp EXCL &kp GB_DOUBLE_QUOTES &kp GB_HASH &kp DLLR &kp PRCNT &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LEFT_BRACKET &kp RIGHT_BRACKET
                &kp SEMICOLON &kp COLON &kp PLUS &kp EQUAL &kp N1 &kp N0 &kp UNDERSCORE &kp MINUS &kp LPAR &kp RPAR
                &kp BACKSLASH &none &kp LEFT_BRACE &kp RIGHT_BRACE &none &kp GB_POUND_SIGN &kp GRAVE &kp TILDE &kp PIPE &none
                &trans &trans &trans &trans &trans &trans
            >;
        };

        space_2 {
// -----------------------------------------------------------------------------------------
// |     |     |     |     |     |     |     |     |     |     |     |
// |     | CUT | CPY | PST | DSH |     |  0  |  1  |  2  |  3  |  4  |
// |     |     |     |     |     |     |  5  |  6  |  7  |  8  |  9  |
//             |     |     |     |     |     |     |     |
            bindings = <
                &trans &trans &trans &trans &trans                      &trans &trans &trans &trans &trans
                &trans &kp K_CUT &kp K_COPY &kp K_PASTE &double_shift   &kp N0 &kp N1 &kp N2 &kp N3 &kp N4
                &trans &trans &trans &trans &trans                      &kp N5 &kp N6 &kp N7 &kp N8 &kp N9
                              &trans &trans &trans                      &trans &trans &trans
            >;
        };

        navigate_3 {
            status = "reserved";
        };

        function_4 {
            status = "reserved";
        };
    };
};
