/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "keys_en_gb.h"  // https://github.com/joelspadin/zmk-locale-generator/releases/tag/v1.5.0

#define COMBO(name, timeout, keys, binding) combo_##name { timeout-ms = <timeout>; key-positions = <keys>; bindings = <&kp binding>; }
#define COMBO(NAME, TERM, KEYPOS, BINDINGS) \
  combo_##NAME { \
    timeout-ms = <TERM>; \
    key-positions = <KEYPOS>; \
    bindings = <BINDINGS>; \
  };

/ {
    chosen {
        zmk,physical-layout = &foostan_corne_5col_layout;
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <0>;
            flavor = "balanced";  // tap when rolling
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
        double_shift: double_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp LSHFT>, <&macro_tap &kp LSHFT>;
        };
    };

    //  0  1  2  3  4    5  6  7  8  9
    // 10 11 12 13 14   15 16 17 18 19
    // 20 21 22 23 24   25 26 27 28 29
    //       30 31 32   33 34 35
    combos {
        compatible = "zmk,combos";

        COMBO(backspace, 30, 16 17, &kp BACKSPACE)
        COMBO(enter, 50, 11 12 13, &kp ENTER)
        COMBO(tab, 50, 2 3, &kp TAB)
        COMBO(delete, 50, 10 11, &kp DEL)
        COMBO(caps, 30, 17 18, &kp CAPS)
        COMBO(escape, 50, 1 2, &kp ESC)

        COMBO(cut, 60, 10 11 12, &kp LC(X))
        COMBO(copy, 40, 11 12, &kp LC(C))
        COMBO(paste, 40, 12 13, &kp LC(V))
        COMBO(undo, 50, 16 17 18, &kp LC(Z))

        COMBO(lbkt, 50, 1 11, &kp LBKT)
        COMBO(rbkt, 50, 2 12, &kp RBKT)
        COMBO(equal, 50, 3 13, &kp EQUAL)
        COMBO(lpar, 50, 6 16, &kp LPAR)
        COMBO(rpar, 50, 7 17, &kp RPAR)
        COMBO(colon, 50, 8 18, &kp COLON)
        COMBO(semicolon, 50, 9 19, &kp SEMI)

        COMBO(six, 50, 10 20, &kp N6)
        COMBO(four, 50, 11 21, &kp N4)
        COMBO(two, 50, 12 22, &kp N2)
        COMBO(zero, 50, 13 23, &kp N0)
        COMBO(eight, 50, 14 24, &kp N8)
        COMBO(nine, 50, 15 25, &kp N9)
        COMBO(one, 50, 16 26, &kp N1)
        COMBO(three, 50, 17 27, &kp N3)
        COMBO(five, 50, 18 28, &kp N5)
        COMBO(seven, 50, 19 29, &kp N7)

        combo_2shift {
            timeout-ms = <50>;
            key-positions = <13 14>;
            bindings = <&double_shift>;
        };
    };
    
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp SQT    &kp GB_DQT &kp DOT     &kp COMMA    &kp MINUS      &kp X      &kp M        &kp G       &kp W      &kp V
                &hm LALT C &hm LWIN I &hm LCTRL E &hm LSHIFT A &kp UNDERSCORE &kp K      &hm LSHIFT H &hm LCTRL T &hm LWIN N &hm LALT S
                &kp B      &kp Y      &kp O       &kp U        &kp FSLH       &kp J      &kp L        &kp D       &kp P      &kp F
                                      &trans      &lt 4 Q      &lt 2 SPACE    &lt 1 R    &lt 3 Z      &trans
            >;
        };

        SYM {
            bindings = <
                &kp EXCL     &kp GB_AT &kp GB_HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS &kp STAR &kp LT   &kp GT
                &kp GB_TILDE &kp GRAVE &kp LBKT    &kp RBKT &kp GB_PIPE &trans    &kp LBRC &kp RBRC &kp PLUS &kp GB_BSLH
                &trans       &trans    &trans      &trans   &trans      &trans    &trans   &trans   &trans   &trans
                                       &trans      &trans   &trans      &trans    &trans   &trans
            >;
        };

        NUM {
            bindings = <
                &trans &trans &trans &kp N8 &trans &trans &kp N9 &trans &trans &trans
                &kp N6 &kp N4 &kp N2 &kp N0 &trans &trans &kp N1 &kp N3 &kp N5 &kp N7
                &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
                &trans &trans &trans &trans &trans &trans
            >;
        };

        NAV {
            bindings = <
                &trans &trans &trans &trans &trans &trans &kp HOME &kp PG_UP &kp PG_DN &kp END
                &trans &trans &trans &trans &trans &kp INSERT &kp LEFT &kp UP &kp DOWN &kp RIGHT
                &trans &trans &trans &trans &trans &trans &kp C_VOL_DN &trans &trans &kp C_VOL_UP
                &trans &trans &trans &trans &trans &trans
            >;
        };

        FUN {
            bindings = <
                &kp F9 &kp F10 &kp F11 &kp F12 &trans &trans &trans &trans &trans &trans
                &kp F5 &kp F6  &kp F7  &kp F8  &trans &trans &trans &trans &trans &trans
                &kp F1 &kp F2  &kp F3  &kp F4  &trans &trans &trans &trans &trans &trans
                &trans &trans &trans &trans &trans &trans
            >;
        };
    };
};
