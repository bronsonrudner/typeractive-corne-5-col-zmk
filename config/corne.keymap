/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "keys_en_gb.h"  // https://github.com/joelspadin/zmk-locale-generator/releases/tag/v1.5.0

#define POUND GB_POUND_SIGN

/ {
    chosen {
        zmk,physical-layout = &foostan_corne_5col_layout;
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "balanced";  // tap when rolling
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
        double_shift: double_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp LSHFT>, <&macro_tap &kp LSHFT>;
        };
    };

    combos {
        compatible = "zmk,combos";
        combo_tab {
            timeout-ms = <50>;
            key-positions = <2 3>;
            bindings = <&kp TAB>;
        };
        combo_backspace {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp BACKSPACE>;
        };
        combo_delete {
            timeout-ms = <50>;
            key-positions = <22 23>;
            bindings = <&kp DEL>;
        };
        combo_caps {
            timeout-ms = <50>;
            key-positions = <6 7>;
            bindings = <&kp CAPS>;
        };
        combo_enter_right {
            timeout-ms = <50>;
            key-positions = <15 16>;
            bindings = <&kp ENTER>;
        };
        combo_enter_left {
            timeout-ms = <50>;
            key-positions = <13 14>;
            bindings = <&kp ENTER>;
        };
        combo_escape_right {
            timeout-ms = <50>;
            key-positions = <26 27>;
            bindings = <&kp ESC>;
        };
        combo_escape_left {
            timeout-ms = <50>;
            key-positions = <3 4>;
            bindings = <&kp ESC>;
        };
    };
    
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp SQT &kp COMMA &kp DOT &kp P &kp Y &kp F &kp G &kp C &kp R &kp L
                &hm LCTRL A &hm LALT O &hm LWIN E &hm LSHIFT U &kp I &kp D &hm LSHIFT H &hm LWIN T &hm LALT N &hm LCTRL S
                &kp FSLH &kp Q &kp J &kp K &kp X &kp B &kp M &kp W &kp V &kp Z
                &none &mo 4 &lt 2 SPACE &lt 1 SPACE &mo 3 &none
            >;
        };

        SYM {
            bindings = <
                &kp EXCL &kp GB_DQT &kp GB_HASH &kp DLLR &kp PRCNT &kp CARET &kp AMPS &kp STAR &kp LBKT &kp RBKT
                &kp SEMI &kp COLON &kp PLUS &kp EQUAL &kp N1 &kp N0 &kp UNDERSCORE &kp MINUS &kp LPAR &kp RPAR
                &kp GB_BSLH &none &kp LBRC &kp RBRC &kp GB_EURO &kp POUND &kp GRAVE &kp GB_TILDE &kp GB_PIPE &kp GB_NOT
                &trans &trans &trans &trans &trans &trans
            >;
        };

        NUM {
            bindings = <
                &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
                &trans &kp LC(X) &kp LC(C) &kp LC(V) &double_shift &kp N0 &kp N1 &kp N2 &kp N3 &kp N4
                &trans &trans &trans &trans &trans &kp N5 &kp N6 &kp N7 &kp N8 &kp N9
                &trans &trans &trans &trans &trans &trans
            >;
        };

        NAV {
            bindings = <
                &trans &trans &trans &trans &trans &kp HOME &kp LC(LEFT) &kp PG_UP &kp PG_DN &kp LC(RIGHT)
                &trans &trans &trans &trans &trans &kp END &kp LEFT &kp UP &kp DOWN &kp RIGHT
                &trans &trans &trans &trans &trans &kp INSERT &kp C_VOL_DN &trans &trans &kp C_VOL_UP
                &trans &trans &trans &trans &trans &trans
            >;
        };

        FUN {
            bindings = <
                &kp ESC &trans &kp F11 &kp F12 &trans &trans &trans &trans &trans &trans
                &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &trans &trans &trans &trans &trans
                &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 &trans &trans &trans &trans &trans
                &trans &trans &trans &trans &trans &trans
            >;
        };
    };
};
